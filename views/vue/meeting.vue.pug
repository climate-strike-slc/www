script(type="text/javascript").
	Vue.prototype.$ = $;
	Vue.prototype.window = window;
	Vue.prototype.ZoomMtg = ZoomMtg;
	new Vue({
		el: '#meetingvue',
		data: function data(){
			return {
				meeting: this.parseObj(!{JSON.stringify(meeting)})
			}
		},
		mounted: function(){
			var self = this;
			
			console.log('checkSystemRequirements');
			console.log(JSON.stringify(ZoomMtg.checkSystemRequirements()));
			if (self.meeting) {
				// Have tried both local and CDN ZoomJSLibs
				//- ZoomMtg.setZoomJSLib('../node_modules/@zoomus/websdk/dist/lib', '/av');
				ZoomMtg.setZoomJSLib('https://dmogdx0jrul3u.cloudfront.net/1.7.2/lib', '/av');
				ZoomMtg.preLoadWasm()
				ZoomMtg.prepareJssdk()
				setTimeout(function(){

					this.zoomMeeting = document.getElementById("zmmtg-root");
					var meetingId = self.meeting.id;

					$.post(`/signature/${meetingId}`)
					.then(function(response) {
						// This works (response contains signature):
						console.log(response)
						// This works:
						ZoomMtg.init({
							leaveUrl: `/meetingEnd/${meetingId}`,
							isSupportAV: true,
							success: function() {
							// logs 'init success' every time
							console.log('init success')
							console.log(response)
								ZoomMtg.join({
									signature: response.signature,
									apiKey: response.apiKey,
									meetingNumber: meetingId,
									userName: 'example username',
									success: function() {
										console.log('join success')
									},
									error: function(res) { 
										// logs 'join fail' every time
										console.log('join fail')
										console.log(res) 
									}
								})
							}
						})
					})
				}, 1000)
			}
			$(document).ready(function(){
				document.addEventListener('keydown', function(event) {
					var keyName = event.key;
					if (keyName === 'Enter') event.preventDefault()
				});
			})
		},
		methods: Object.assign({}, baseFunctions)
	});
